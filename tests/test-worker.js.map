{"version":3,"sources":["../src/test-worker.js"],"names":["importScripts","self","_babelPolyfill","onmessage","e","dbName","data","msg","message","version","db","open","server","then","result","close","postMessage","ports"],"mappings":";;AAAA;AACC,aAAY;AACT;;AACAA,EAAAA,aAAa,CAAC,gDAAD,CAAb;AACAC,EAAAA,IAAI,CAACC,cAAL,GAAsB,KAAtB,CAHS,CAGoB;;AAC7BF,EAAAA,aAAa,CAAC,iBAAD,CAAb;;AACAC,EAAAA,IAAI,CAACE,SAAL,GAAiB,UAAUC,CAAV,EAAa;AAC1B,QAAIC,MAAM,GAAGD,CAAC,CAACE,IAAF,CAAOD,MAApB;AACA,QAAIE,GAAG,GAAGH,CAAC,CAACE,IAAF,CAAOE,OAAjB;AACA,QAAIC,OAAO,GAAGL,CAAC,CAACE,IAAF,CAAOG,OAArB;;AACA,YAAQF,GAAR;AACA,WAAK,iBAAL;AACIG,QAAAA,EAAE,CAACC,IAAH,CAAQ;AACJC,UAAAA,MAAM,EAAEP,MADJ;AAEJI,UAAAA,OAAO,EAAEA;AAFL,SAAR,EAGGI,IAHH,CAGQ,UAAUD,MAAV,EAAkB;AACtB,cAAME,MAAM,GAAG,OAAOF,MAAP,KAAkB,WAAjC;AACAA,UAAAA,MAAM,CAACG,KAAP,GAFsB,CAEN;;AAChBC,UAAAA,WAAW,CAACF,MAAD,CAAX;AACH,SAPD;AAQA;;AACJ,WAAK,qBAAL;AACIJ,QAAAA,EAAE,CAACC,IAAH,CAAQ;AACJC,UAAAA,MAAM,EAAEP,MADJ;AAEJI,UAAAA,OAAO,EAAEA;AAFL,SAAR,EAGGI,IAHH,CAGQ,UAAUD,MAAV,EAAkB;AACtB,cAAME,MAAM,GAAG,OAAOF,MAAP,KAAkB,WAAjC;AACAA,UAAAA,MAAM,CAACG,KAAP,GAFsB,CAEN;;AAChBX,UAAAA,CAAC,CAACa,KAAF,CAAQ,CAAR,EAAWD,WAAX,CAAuBF,MAAvB;AACH,SAPD;AAQA;AApBJ;AAsBH,GA1BD;AA2BH,CAhCA,GAAD","sourcesContent":["/* globals importScripts, db */\r\n(function () {\r\n    'use strict';\r\n    importScripts('/node_modules/@babel/polyfill/dist/polyfill.js');\r\n    self._babelPolyfill = false; // Hack for babel polyfill which checks for there being only one instance per this flag\r\n    importScripts('/dist/db.min.js');\r\n    self.onmessage = function (e) {\r\n        var dbName = e.data.dbName;\r\n        var msg = e.data.message;\r\n        var version = e.data.version;\r\n        switch (msg) {\r\n        case 'web worker open':\r\n            db.open({\r\n                server: dbName,\r\n                version: version\r\n            }).then(function (server) {\r\n                const result = typeof server !== 'undefined';\r\n                server.close(); // Prevent subsequent blocking\r\n                postMessage(result);\r\n            });\r\n            break;\r\n        case 'service worker open':\r\n            db.open({\r\n                server: dbName,\r\n                version: version\r\n            }).then(function (server) {\r\n                const result = typeof server !== 'undefined';\r\n                server.close(); // Prevent subsequent blocking\r\n                e.ports[0].postMessage(result);\r\n            });\r\n            break;\r\n        }\r\n    };\r\n}());\r\n"],"file":"test-worker.js"}