{"version":3,"sources":["../src/db.js"],"names":["local","hasOwn","Object","prototype","hasOwnProperty","indexedDB","webkitIndexedDB","mozIndexedDB","oIndexedDB","msIndexedDB","shimIndexedDB","Error","IDBKeyRange","webkitIDBKeyRange","defaultMapper","x","serverEvents","transactionModes","readonly","readwrite","dbCache","isObject","item","mongoDBToKeyRangeArgs","opts","keys","sort","length","key","val","name","inclusive","TypeError","y","pattern","join","mongoifyKey","type","args","IndexQuery","table","db","indexName","preexistingError","trans","modifyObj","runQuery","cursorType","direction","limitRange","filters","mapper","Promise","resolve","reject","keyRange","results","counter","indexArgs","transaction","addEventListener","e","store","objectStore","index","push","modifyKeys","modifyRecord","record","forEach","onsuccess","cursor","target","result","advance","matchFilter","value","filter","propObj","prop","update","err","continue","Query","queuedError","unique","error","execute","count","desc","distinct","limit","map","start","end","some","modify","fn","arguments","range","query","all","Server","version","noServerMethods","closed","setupTransactionAndStore","records","preventDefault","adapterCb","tr","cb","getIndexedDB","isClosed","batch","storeOpsArr","extraStores","parallel","then","res","undefined","tableBatch","ops","add","reduce","aip","concat","req","call","keyPath","source","defineProperty","enumerable","put","remove","delete","del","clear","close","get","eventName","handler","includes","removeEventListener","evName","Array","from","objectStoreNames","storeName","open","server","options","clearUnusedStores","clearUnusedIndexes","schema","schemas","schemaType","openDb","s","idbimport","IdbImport","p","schemaBuilder","_addCallback","addCallback","newCb","createVersionedSchema","idbschemaVersion","catch","resume","retry","_retry","dbName","request","deleteDatabase","newVersion","onerror","onblocked","Proxy","rej","ev","oldVersion","cmp","param1","param2","rangeIncludes","module","exports","define","amd","self"],"mappings":"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","file":"db.js","sourcesContent":["import IdbImport from './idb-import';\nimport batch, {transactionalBatch} from 'idb-batch';\n\n(function (local) {\n    'use strict';\n    const hasOwn = Object.prototype.hasOwnProperty;\n\n    const indexedDB = local.indexedDB || local.webkitIndexedDB ||\n        local.mozIndexedDB || local.oIndexedDB || local.msIndexedDB ||\n        local.shimIndexedDB || (function () {\n            throw new Error('IndexedDB required');\n        }());\n    const IDBKeyRange = local.IDBKeyRange || local.webkitIDBKeyRange;\n\n    const defaultMapper = x => x;\n    const serverEvents = ['abort', 'error', 'versionchange'];\n    const transactionModes = {\n        readonly: 'readonly',\n        readwrite: 'readwrite'\n    };\n\n    const dbCache = {};\n\n    function isObject (item) {\n        return item && typeof item === 'object';\n    }\n\n    function mongoDBToKeyRangeArgs (opts) {\n        const keys = Object.keys(opts).sort();\n        if (keys.length === 1) {\n            const key = keys[0];\n            const val = opts[key];\n            let name, inclusive;\n            switch (key) {\n            case 'eq': name = 'only'; break;\n            case 'gt':\n                name = 'lowerBound';\n                inclusive = true;\n                break;\n            case 'lt':\n                name = 'upperBound';\n                inclusive = true;\n                break;\n            case 'gte': name = 'lowerBound'; break;\n            case 'lte': name = 'upperBound'; break;\n            default: throw new TypeError('`' + key + '` is not a valid key');\n            }\n            return [name, [val, inclusive]];\n        }\n        const x = opts[keys[0]];\n        const y = opts[keys[1]];\n        const pattern = keys.join('-');\n\n        switch (pattern) {\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\n        default: throw new TypeError(\n          '`' + pattern + '` are conflicted keys'\n        );\n        }\n    }\n    function mongoifyKey (key) {\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\n            const [type, args] = mongoDBToKeyRangeArgs(key);\n            return IDBKeyRange[type](...args);\n        }\n        return key;\n    }\n\n    const IndexQuery = function (table, db, indexName, preexistingError, trans) {\n        let modifyObj = null;\n\n        const runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\n            return new Promise(function (resolve, reject) {\n                const keyRange = type ? IDBKeyRange[type](...args) : null; // May throw\n                filters = filters || [];\n                limitRange = limitRange || null;\n\n                let results = [];\n                let counter = 0;\n                const indexArgs = [keyRange];\n\n                const transaction = trans || db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\n                transaction.addEventListener('error', e => reject(e));\n                transaction.addEventListener('abort', e => reject(e));\n                transaction.addEventListener('complete', () => resolve(results));\n\n                const store = transaction.objectStore(table); // if bad, db.transaction will reject first\n                const index = typeof indexName === 'string' ? store.index(indexName) : store;\n\n                if (cursorType !== 'count') {\n                    indexArgs.push(direction || 'next');\n                }\n\n                // Create a function that will set in the modifyObj properties into\n                // the passed record.\n                const modifyKeys = modifyObj ? Object.keys(modifyObj) : [];\n\n                const modifyRecord = function (record) {\n                    modifyKeys.forEach(key => {\n                        let val = modifyObj[key];\n                        if (typeof val === 'function') { val = val(record); }\n                        record[key] = val;\n                    });\n                    return record;\n                };\n\n                index[cursorType](...indexArgs).onsuccess = function (e) { // indexArgs are already validated\n                    const cursor = e.target.result;\n                    if (typeof cursor === 'number') {\n                        results = cursor;\n                    } else if (cursor) {\n                        if (limitRange !== null && limitRange[0] > counter) {\n                            counter = limitRange[0];\n                            cursor.advance(limitRange[0]); // Will throw on 0, but condition above prevents since counter always 0+\n                        } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\n                            // Out of limit range... skip\n                        } else {\n                            let matchFilter = true;\n                            let result = 'value' in cursor ? cursor.value : cursor.key;\n\n                            try { // We must manually catch for this promise as we are within an async event function\n                                filters.forEach(function (filter) {\n                                    let propObj = filter[0];\n                                    if (typeof propObj === 'function') {\n                                        matchFilter = matchFilter && propObj(result); // May throw with filter on non-object\n                                    } else {\n                                        if (!propObj || typeof propObj !== 'object') {\n                                            propObj = {[propObj]: filter[1]};\n                                        }\n                                        Object.keys(propObj).forEach((prop) => {\n                                            matchFilter = matchFilter && (result[prop] === propObj[prop]); // May throw with error in filter function\n                                        });\n                                    }\n                                });\n\n                                if (matchFilter) {\n                                    counter++;\n                                    // If we're doing a modify, run it now\n                                    if (modifyObj) {\n                                        result = modifyRecord(result);  // May throw\n                                        cursor.update(result); // May throw as `result` should only be a \"structured clone\"-able object\n                                    }\n                                    results.push(mapper(result)); // May throw\n                                }\n                            } catch (err) {\n                                reject(err);\n                                return;\n                            }\n                            cursor.continue();\n                        }\n                    }\n                };\n            });\n        };\n\n        const Query = function (type, args, queuedError) {\n            const filters = [];\n            let direction = 'next';\n            let cursorType = 'openCursor';\n            let limitRange = null;\n            let mapper = defaultMapper;\n            let unique = false;\n            let error = preexistingError || queuedError;\n\n            const execute = function () {\n                if (error) {\n                    return Promise.reject(error);\n                }\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\n            };\n\n            const count = function () {\n                direction = null;\n                cursorType = 'count';\n                return {execute};\n            };\n\n            const keys = function () {\n                cursorType = 'openKeyCursor';\n                return {desc, distinct, execute, filter, limit, map};\n            };\n\n            const limit = function (start, end) {\n                limitRange = !end ? [0, start] : [start, end];\n                error = limitRange.some(val => typeof val !== 'number') ? new Error('limit() arguments must be numeric') : error;\n                return {desc, distinct, filter, keys, execute, map, modify};\n            };\n\n            const filter = function (prop, val) {\n                filters.push([prop, val]);\n                return {desc, distinct, execute, filter, keys, limit, map, modify};\n            };\n\n            const desc = function () {\n                direction = 'prev';\n                return {distinct, execute, filter, keys, limit, map, modify};\n            };\n\n            const distinct = function () {\n                unique = true;\n                return {count, desc, execute, filter, keys, limit, map, modify};\n            };\n\n            const modify = function (update) {\n                modifyObj = update && typeof update === 'object' ? update : null;\n                return {execute};\n            };\n\n            const map = function (fn) {\n                mapper = fn;\n                return {count, desc, distinct, execute, filter, keys, limit, modify};\n            };\n\n            return {count, desc, distinct, execute, filter, keys, limit, map, modify};\n        };\n\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\n            this[name] = function () {\n                return Query(name, arguments);\n            };\n        });\n\n        this.range = function (opts) {\n            let error;\n            let keyRange = [null, null];\n            try {\n                keyRange = mongoDBToKeyRangeArgs(opts);\n            } catch (e) {\n                error = e;\n            }\n            return Query(...keyRange, error);\n        };\n\n        this.filter = function (...args) {\n            const query = Query(null, null);\n            return query.filter(...args);\n        };\n\n        this.all = function () {\n            return this.filter();\n        };\n    };\n\n    const Server = function (db, name, version, noServerMethods) {\n        let closed = false;\n        let trans;\n        const setupTransactionAndStore = (db, table, records, resolve, reject, readonly) => {\n            const transaction = trans || db.transaction(table, readonly ? transactionModes.readonly : transactionModes.readwrite);\n            transaction.addEventListener('error', e => {\n                // prevent throwing aborting (hard)\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\n                e.preventDefault();\n                reject(e);\n            });\n            transaction.addEventListener('abort', e => reject(e));\n            transaction.addEventListener('complete', () => resolve(records));\n            return transaction.objectStore(table);\n        };\n        const adapterCb = (tr, cb) => {\n            if (!trans) trans = tr;\n            return cb(tr, this);\n        };\n\n        this.getIndexedDB = () => db;\n        this.isClosed = () => closed;\n\n        this.batch = function (storeOpsArr, opts = {extraStores: [], parallel: false}) {\n            opts = opts || {};\n            var {extraStores, parallel} = opts; // We avoid `resolveEarly`\n            return transactionalBatch(db, storeOpsArr, {adapterCb, extraStores, parallel}).then((res) => {\n                trans = undefined;\n                return res;\n            });\n        };\n        this.tableBatch = function (table, ops, opts = {parallel: false}) {\n            opts = opts || {};\n            return batch(db, table, ops, {adapterCb, parallel: opts.parallel}).then((res) => {\n                trans = undefined;\n                return res;\n            });\n        };\n\n        this.query = function (table, index) {\n            const error = closed ? new Error('Database has been closed') : null;\n            return new IndexQuery(table, db, index, error, trans); // Does not throw by itself\n        };\n\n        this.add = function (table, ...args) {\n            return new Promise(function (resolve, reject) {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n\n                const records = args.reduce(function (records, aip) {\n                    return records.concat(aip);\n                }, []);\n\n                const store = setupTransactionAndStore(db, table, records, resolve, reject);\n\n                records.some(function (record) {\n                    let req, key;\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\n                        key = record.key;\n                        record = record.item;\n                        if (key != null) {\n                            key = mongoifyKey(key); // May throw\n                        }\n                    }\n\n                    // Safe to add since in readwrite, but may still throw\n                    if (key != null) {\n                        req = store.add(record, key);\n                    } else {\n                        req = store.add(record);\n                    }\n\n                    req.onsuccess = function (e) {\n                        if (!isObject(record)) {\n                            return;\n                        }\n                        const target = e.target;\n                        let keyPath = target.source.keyPath;\n                        if (keyPath === null) {\n                            keyPath = '__id__';\n                        }\n                        if (hasOwn.call(record, keyPath)) {\n                            return;\n                        }\n                        Object.defineProperty(record, keyPath, {\n                            value: target.result,\n                            enumerable: true\n                        });\n                    };\n                });\n            });\n        };\n\n        this.update = function (table, ...args) {\n            return new Promise(function (resolve, reject) {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n\n                const records = args.reduce(function (records, aip) {\n                    return records.concat(aip);\n                }, []);\n\n                const store = setupTransactionAndStore(db, table, records, resolve, reject);\n\n                records.some(function (record) {\n                    let req, key;\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\n                        key = record.key;\n                        record = record.item;\n                        if (key != null) {\n                            key = mongoifyKey(key); // May throw\n                        }\n                    }\n                    // These can throw DataError, e.g., if function passed in\n                    if (key != null) {\n                        req = store.put(record, key);\n                    } else {\n                        req = store.put(record);\n                    }\n\n                    req.onsuccess = function (e) {\n                        if (!isObject(record)) {\n                            return;\n                        }\n                        const target = e.target;\n                        let keyPath = target.source.keyPath;\n                        if (keyPath === null) {\n                            keyPath = '__id__';\n                        }\n                        if (hasOwn.call(record, keyPath)) {\n                            return;\n                        }\n                        Object.defineProperty(record, keyPath, {\n                            value: target.result,\n                            enumerable: true\n                        });\n                    };\n                });\n            });\n        };\n\n        this.put = function (...args) {\n            return this.update(...args);\n        };\n\n        this.remove = function (table, key) {\n            return new Promise(function (resolve, reject) {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n                key = mongoifyKey(key); // May throw\n\n                const store = setupTransactionAndStore(db, table, key, resolve, reject);\n\n                store.delete(key); // May throw\n            });\n        };\n\n        this.del = this.delete = function (...args) {\n            return this.remove(...args);\n        };\n\n        this.clear = function (table) {\n            return new Promise(function (resolve, reject) {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject);\n                store.clear();\n            });\n        };\n\n        this.close = function () {\n            return new Promise(function (resolve, reject) {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n                closed = true;\n                delete dbCache[name][version];\n                db.close();\n                resolve();\n            });\n        };\n\n        this.get = function (table, key) {\n            return new Promise(function (resolve, reject) {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n                key = mongoifyKey(key); // May throw\n\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject, true);\n\n                const req = store.get(key);\n                req.onsuccess = e => resolve(e.target.result);\n            });\n        };\n\n        this.count = function (table, key) {\n            return new Promise((resolve, reject) => {\n                if (closed) {\n                    reject(new Error('Database has been closed'));\n                    return;\n                }\n                key = mongoifyKey(key); // May throw\n\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject, true);\n\n                const req = key == null ? store.count() : store.count(key); // May throw\n                req.onsuccess = e => resolve(e.target.result);\n            });\n        };\n\n        this.addEventListener = function (eventName, handler) {\n            if (!serverEvents.includes(eventName)) {\n                throw new Error('Unrecognized event type ' + eventName);\n            }\n            if (eventName === 'error') {\n                db.addEventListener(eventName, function (e) {\n                    e.preventDefault(); // Needed to prevent hard abort with ConstraintError\n                    handler(e);\n                });\n                return;\n            }\n            db.addEventListener(eventName, handler);\n        };\n\n        this.removeEventListener = function (eventName, handler) {\n            if (!serverEvents.includes(eventName)) {\n                throw new Error('Unrecognized event type ' + eventName);\n            }\n            db.removeEventListener(eventName, handler);\n        };\n\n        serverEvents.forEach(function (evName) {\n            this[evName] = function (handler) {\n                this.addEventListener(evName, handler);\n                return this;\n            };\n        }, this);\n\n        if (noServerMethods) {\n            return;\n        }\n\n        let err;\n        Array.from(db.objectStoreNames).some(storeName => {\n            if (this[storeName]) {\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\n                this.close();\n                return true;\n            }\n            this[storeName] = {};\n            const keys = Object.keys(this);\n            keys.filter(key => !(([...serverEvents, 'close', 'batch', 'addEventListener', 'removeEventListener']).includes(key)))\n                .map(key => {\n                    this[storeName][key] = (...args) => this[key](storeName, ...args);\n                });\n        });\n        return err;\n    };\n\n    const open = function (db, server, version, noServerMethods) {\n        dbCache[server][version] = db;\n\n        return new Server(db, server, version, noServerMethods);\n    };\n\n    const db = {\n        version: '0.15.0',\n        open: function (options) {\n            const server = options.server;\n            const noServerMethods = options.noServerMethods;\n            const clearUnusedStores = options.clearUnusedStores !== false;\n            const clearUnusedIndexes = options.clearUnusedIndexes !== false;\n            let version = options.version || 1;\n            let schema = options.schema;\n            let schemas = options.schemas;\n            let schemaType = options.schemaType || (schema ? 'whole' : 'mixed');\n            if (!dbCache[server]) {\n                dbCache[server] = {};\n            }\n            const openDb = function (db) {\n                const s = open(db, server, version, noServerMethods);\n                if (s instanceof Error) {\n                    throw s;\n                }\n                return s;\n            };\n\n            return new Promise(function (resolve, reject) {\n                if (dbCache[server][version]) {\n                    const s = open(dbCache[server][version], server, version, noServerMethods);\n                    if (s instanceof Error) {\n                        reject(s);\n                        return;\n                    }\n                    resolve(s);\n                    return;\n                }\n                const idbimport = new IdbImport();\n                let p = Promise.resolve();\n                if (schema || schemas || options.schemaBuilder) {\n                    const _addCallback = idbimport.addCallback;\n                    idbimport.addCallback = function (cb) {\n                        function newCb (db) {\n                            const s = open(db, server, version, noServerMethods);\n                            if (s instanceof Error) {\n                                throw s;\n                            }\n                            return cb(db, s);\n                        }\n                        return _addCallback.call(idbimport, newCb);\n                    };\n\n                    p = p.then(() => {\n                        if (options.schemaBuilder) {\n                            return options.schemaBuilder(idbimport);\n                        }\n                    }).then(() => {\n                        if (schema) {\n                            switch (schemaType) {\n                            case 'mixed': case 'idb-schema': case 'merge': case 'whole': {\n                                schemas = {[version]: schema};\n                                break;\n                            }\n                            }\n                        }\n                        if (schemas) {\n                            idbimport.createVersionedSchema(schemas, schemaType, clearUnusedStores, clearUnusedIndexes);\n                        }\n                        const idbschemaVersion = idbimport.version();\n                        if (options.version && idbschemaVersion < version) {\n                            throw new Error(\n                                'Your highest schema building (IDBSchema) version (' + idbschemaVersion + ') ' +\n                                'must not be less than your designated version (' + version + ').'\n                            );\n                        }\n                        if (!options.version && idbschemaVersion > version) {\n                            version = idbschemaVersion;\n                        }\n                    });\n                }\n\n                p.then(() => {\n                    return idbimport.open(server, version);\n                }).catch((err) => {\n                    if (err.resume) {\n                        err.resume = err.resume.then(openDb);\n                    }\n                    if (err.retry) {\n                        const _retry = err.retry;\n                        err.retry = function () {\n                            _retry.call(err).then(openDb);\n                        };\n                    }\n                    throw err;\n                }).then(openDb).then(resolve).catch((e) => {\n                    reject(e);\n                });\n            });\n        },\n\n        del: function (dbName) {\n            return this.delete(dbName);\n        },\n        delete: function (dbName) {\n            return new Promise(function (resolve, reject) {\n                const request = indexedDB.deleteDatabase(dbName); // Does not throw\n\n                request.onsuccess = e => {\n                    // The following is needed currently by PhantomJS (though we cannot polyfill `oldVersion`): https://github.com/ariya/phantomjs/issues/14141\n                    if (!('newVersion' in e)) {\n                        e.newVersion = null;\n                    }\n                    resolve(e);\n                };\n                request.onerror = e => { // No errors currently\n                    e.preventDefault();\n                    reject(e);\n                };\n                request.onblocked = e => {\n                    // The following addresses part of https://bugzilla.mozilla.org/show_bug.cgi?id=1220279\n                    e = e.newVersion === null || typeof Proxy === 'undefined' ? e : new Proxy(e, {get: function (target, name) {\n                        return name === 'newVersion' ? null : target[name];\n                    }});\n                    const resume = new Promise(function (res, rej) {\n                        // We overwrite handlers rather than make a new\n                        //   delete() since the original request is still\n                        //   open and its onsuccess will still fire if\n                        //   the user unblocks by closing the blocking\n                        //   connection\n                        request.onsuccess = ev => {\n                            // The following are needed currently by PhantomJS: https://github.com/ariya/phantomjs/issues/14141\n                            if (!('newVersion' in ev)) {\n                                ev.newVersion = e.newVersion;\n                            }\n\n                            if (!('oldVersion' in ev)) {\n                                ev.oldVersion = e.oldVersion;\n                            }\n\n                            res(ev);\n                        };\n                        request.onerror = e => {\n                            e.preventDefault();\n                            rej(e);\n                        };\n                    });\n                    e.resume = resume;\n                    reject(e);\n                };\n            });\n        },\n\n        cmp: function (param1, param2) {\n            return new Promise(function (resolve, reject) {\n                resolve(indexedDB.cmp(param1, param2)); // May throw\n            });\n        },\n\n        rangeIncludes: function (range, key) {\n            return new Promise(function (resolve, reject) {\n                range = mongoifyKey(range); // May throw\n                if (!range || typeof range !== 'object') {\n                    reject(new TypeError('Bad range supplied'));\n                    return;\n                }\n                key = mongoifyKey(key); // May throw\n                resolve(range.includes(key));\n            });\n        }\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = db;\n    } else if (typeof define === 'function' && define.amd) {\n        define(function () { return db; });\n    } else {\n        local.db = db;\n    }\n}(self));\n"]}