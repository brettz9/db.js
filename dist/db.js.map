{"version":3,"sources":["../src/db.js"],"names":["local","hasOwn","Object","prototype","hasOwnProperty","indexedDB","webkitIndexedDB","mozIndexedDB","oIndexedDB","msIndexedDB","shimIndexedDB","Error","IDBKeyRange","webkitIDBKeyRange","defaultMapper","x","serverEvents","transactionModes","readonly","readwrite","dbCache","isObject","item","mongoDBToKeyRangeArgs","opts","keys","sort","length","key","val","name","inclusive","TypeError","y","pattern","join","mongoifyKey","type","args","IndexQuery","table","db","indexName","preexistingError","trans","modifyObj","runQuery","cursorType","direction","limitRange","filters","mapper","Promise","resolve","reject","keyRange","results","counter","indexArgs","transaction","addEventListener","e","store","objectStore","index","push","modifyKeys","modifyRecord","record","forEach","onsuccess","cursor","target","result","advance","matchFilter","value","filter","propObj","prop","update","err","Query","queuedError","unique","error","execute","count","desc","distinct","limit","map","start","end","some","modify","fn","arguments","range","query","all","Server","version","noServerMethods","closed","setupTransactionAndStore","records","preventDefault","adapterCb","tr","cb","getIndexedDB","isClosed","batch","storeOpsArr","extraStores","parallel","then","res","undefined","tableBatch","ops","add","reduce","aip","concat","req","call","keyPath","source","defineProperty","enumerable","put","remove","del","clear","close","get","eventName","handler","includes","removeEventListener","evName","Array","from","objectStoreNames","storeName","open","server","options","clearUnusedStores","clearUnusedIndexes","schema","schemas","schemaType","openDb","s","idbimport","IdbImport","p","schemaBuilder","_addCallback","addCallback","newCb","createVersionedSchema","idbschemaVersion","resume","retry","_retry","dbName","request","deleteDatabase","newVersion","onerror","onblocked","Proxy","rej","ev","oldVersion","cmp","param1","param2","rangeIncludes","module","exports","define","amd","self"],"mappings":"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","sourcesContent":["import IdbImport from './idb-import';\r\nimport batch, {transactionalBatch} from 'idb-batch';\r\n\r\n(function (local) {\r\n    'use strict';\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n\r\n    const indexedDB = local.indexedDB || local.webkitIndexedDB ||\r\n        local.mozIndexedDB || local.oIndexedDB || local.msIndexedDB ||\r\n        local.shimIndexedDB || (function () {\r\n        throw new Error('IndexedDB required');\r\n    }());\r\n    const IDBKeyRange = local.IDBKeyRange || local.webkitIDBKeyRange;\r\n\r\n    const defaultMapper = x => x;\r\n    const serverEvents = ['abort', 'error', 'versionchange'];\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n\r\n    const dbCache = {};\r\n\r\n    function isObject (item) {\r\n        return item && typeof item === 'object';\r\n    }\r\n\r\n    function mongoDBToKeyRangeArgs (opts) {\r\n        const keys = Object.keys(opts).sort();\r\n        if (keys.length === 1) {\r\n            const key = keys[0];\r\n            const val = opts[key];\r\n            let name, inclusive;\r\n            switch (key) {\r\n            case 'eq': name = 'only'; break;\r\n            case 'gt':\r\n                name = 'lowerBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'lt':\r\n                name = 'upperBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'gte': name = 'lowerBound'; break;\r\n            case 'lte': name = 'upperBound'; break;\r\n            default: throw new TypeError('`' + key + '` is not a valid key');\r\n            }\r\n            return [name, [val, inclusive]];\r\n        }\r\n        const x = opts[keys[0]];\r\n        const y = opts[keys[1]];\r\n        const pattern = keys.join('-');\r\n\r\n        switch (pattern) {\r\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\r\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\r\n        default: throw new TypeError(\r\n            '`' + pattern + '` are conflicted keys'\r\n        );\r\n        }\r\n    }\r\n    function mongoifyKey (key) {\r\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\r\n            const [type, args] = mongoDBToKeyRangeArgs(key);\r\n            return IDBKeyRange[type](...args);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    const IndexQuery = function (table, db, indexName, preexistingError, trans) {\r\n        let modifyObj = null;\r\n\r\n        const runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            return new Promise(function (resolve, reject) {\r\n                const keyRange = type ? IDBKeyRange[type](...args) : null; // May throw\r\n                filters = filters || [];\r\n                limitRange = limitRange || null;\r\n\r\n                let results = [];\r\n                let counter = 0;\r\n                const indexArgs = [keyRange];\r\n\r\n                const transaction = trans || db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n                transaction.addEventListener('error', e => reject(e));\r\n                transaction.addEventListener('abort', e => reject(e));\r\n                transaction.addEventListener('complete', () => resolve(results));\r\n\r\n                const store = transaction.objectStore(table); // if bad, db.transaction will reject first\r\n                const index = typeof indexName === 'string' ? store.index(indexName) : store;\r\n\r\n                if (cursorType !== 'count') {\r\n                    indexArgs.push(direction || 'next');\r\n                }\r\n\r\n                // Create a function that will set in the modifyObj properties into\r\n                // the passed record.\r\n                const modifyKeys = modifyObj ? Object.keys(modifyObj) : [];\r\n\r\n                const modifyRecord = function (record) {\r\n                    modifyKeys.forEach(key => {\r\n                        let val = modifyObj[key];\r\n                        if (typeof val === 'function') { val = val(record); }\r\n                        record[key] = val;\r\n                    });\r\n                    return record;\r\n                };\r\n\r\n                index[cursorType](...indexArgs).onsuccess = function (e) { // indexArgs are already validated\r\n                    const cursor = e.target.result;\r\n                    if (typeof cursor === 'number') {\r\n                        results = cursor;\r\n                    } else if (cursor) {\r\n                        if (limitRange !== null && limitRange[0] > counter) {\r\n                            counter = limitRange[0];\r\n                            cursor.advance(limitRange[0]); // Will throw on 0, but condition above prevents since counter always 0+\r\n                        } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                            // Out of limit range... skip\r\n                        } else {\r\n                            let matchFilter = true;\r\n                            let result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                            try { // We must manually catch for this promise as we are within an async event function\r\n                                filters.forEach(function (filter) {\r\n                                    let propObj = filter[0];\r\n                                    if (typeof propObj === 'function') {\r\n                                        matchFilter = matchFilter && propObj(result); // May throw with filter on non-object\r\n                                    } else {\r\n                                        if (!propObj || typeof propObj !== 'object') {\r\n                                            propObj = {[propObj]: filter[1]};\r\n                                        }\r\n                                        Object.keys(propObj).forEach((prop) => {\r\n                                            matchFilter = matchFilter && (result[prop] === propObj[prop]); // May throw with error in filter function\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                                if (matchFilter) {\r\n                                    counter++;\r\n                                    // If we're doing a modify, run it now\r\n                                    if (modifyObj) {\r\n                                        result = modifyRecord(result); // May throw\r\n                                        cursor.update(result); // May throw as `result` should only be a \"structured clone\"-able object\r\n                                    }\r\n                                    results.push(mapper(result)); // May throw\r\n                                }\r\n                            } catch (err) {\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n                            cursor.continue();\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        };\r\n\r\n        const Query = function (type, args, queuedError) {\r\n            const filters = [];\r\n            let direction = 'next';\r\n            let cursorType = 'openCursor';\r\n            let limitRange = null;\r\n            let mapper = defaultMapper;\r\n            let unique = false;\r\n            let error = preexistingError || queuedError;\r\n\r\n            const execute = function () {\r\n                if (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            const count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n                return {execute};\r\n            };\r\n\r\n            const keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n                return {desc, distinct, execute, filter, limit, map};\r\n            };\r\n\r\n            const limit = function (start, end) {\r\n                limitRange = !end ? [0, start] : [start, end];\r\n                error = limitRange.some(val => typeof val !== 'number') ? new Error('limit() arguments must be numeric') : error;\r\n                return {desc, distinct, filter, keys, execute, map, modify};\r\n            };\r\n\r\n            const filter = function (prop, val) {\r\n                filters.push([prop, val]);\r\n                return {desc, distinct, execute, filter, keys, limit, map, modify};\r\n            };\r\n\r\n            const desc = function () {\r\n                direction = 'prev';\r\n                return {distinct, execute, filter, keys, limit, map, modify};\r\n            };\r\n\r\n            const distinct = function () {\r\n                unique = true;\r\n                return {count, desc, execute, filter, keys, limit, map, modify};\r\n            };\r\n\r\n            const modify = function (update) {\r\n                modifyObj = update && typeof update === 'object' ? update : null;\r\n                return {execute};\r\n            };\r\n\r\n            const map = function (fn) {\r\n                mapper = fn;\r\n                return {count, desc, distinct, execute, filter, keys, limit, modify};\r\n            };\r\n\r\n            return {count, desc, distinct, execute, filter, keys, limit, map, modify};\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.range = function (opts) {\r\n            let error;\r\n            let keyRange = [null, null];\r\n            try {\r\n                keyRange = mongoDBToKeyRangeArgs(opts);\r\n            } catch (e) {\r\n                error = e;\r\n            }\r\n            return Query(...keyRange, error);\r\n        };\r\n\r\n        this.filter = function (...args) {\r\n            const query = Query(null, null);\r\n            return query.filter(...args);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    const Server = function (db, name, version, noServerMethods) {\r\n        let closed = false;\r\n        let trans;\r\n        const setupTransactionAndStore = (db, table, records, resolve, reject, readonly) => {\r\n            const transaction = trans || db.transaction(table, readonly ? transactionModes.readonly : transactionModes.readwrite);\r\n            transaction.addEventListener('error', e => {\r\n                // prevent throwing aborting (hard)\r\n                // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                e.preventDefault();\r\n                reject(e);\r\n            });\r\n            transaction.addEventListener('abort', e => reject(e));\r\n            transaction.addEventListener('complete', () => resolve(records));\r\n            return transaction.objectStore(table);\r\n        };\r\n        const adapterCb = (tr, cb) => {\r\n            if (!trans) trans = tr;\r\n            return cb(tr, this);\r\n        };\r\n\r\n        this.getIndexedDB = () => db;\r\n        this.isClosed = () => closed;\r\n\r\n        this.batch = function (storeOpsArr, opts = {extraStores: [], parallel: false}) {\r\n            opts = opts || {};\r\n            var {extraStores, parallel} = opts; // We avoid `resolveEarly`\r\n            return transactionalBatch(db, storeOpsArr, {adapterCb, extraStores, parallel}).then((res) => {\r\n                trans = undefined;\r\n                return res;\r\n            });\r\n        };\r\n        this.tableBatch = function (table, ops, opts = {parallel: false}) {\r\n            opts = opts || {};\r\n            return batch(db, table, ops, {adapterCb, parallel: opts.parallel}).then((res) => {\r\n                trans = undefined;\r\n                return res;\r\n            });\r\n        };\r\n\r\n        this.query = function (table, index) {\r\n            const error = closed ? new Error('Database has been closed') : null;\r\n            return new IndexQuery(table, db, index, error, trans); // Does not throw by itself\r\n        };\r\n\r\n        this.add = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const store = setupTransactionAndStore(db, table, records, resolve, reject);\r\n\r\n                records.some(function (record) {\r\n                    let req, key;\r\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\r\n                        key = record.key;\r\n                        record = record.item;\r\n                        if (key != null) {\r\n                            key = mongoifyKey(key); // May throw\r\n                        }\r\n                    }\r\n\r\n                    // Safe to add since in readwrite, but may still throw\r\n                    if (key != null) {\r\n                        req = store.add(record, key);\r\n                    } else {\r\n                        req = store.add(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        if (!isObject(record)) {\r\n                            return;\r\n                        }\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        if (hasOwn.call(record, keyPath)) {\r\n                            return;\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const store = setupTransactionAndStore(db, table, records, resolve, reject);\r\n\r\n                records.some(function (record) {\r\n                    let req, key;\r\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\r\n                        key = record.key;\r\n                        record = record.item;\r\n                        if (key != null) {\r\n                            key = mongoifyKey(key); // May throw\r\n                        }\r\n                    }\r\n                    // These can throw DataError, e.g., if function passed in\r\n                    if (key != null) {\r\n                        req = store.put(record, key);\r\n                    } else {\r\n                        req = store.put(record);\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        if (!isObject(record)) {\r\n                            return;\r\n                        }\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        if (hasOwn.call(record, keyPath)) {\r\n                            return;\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.put = function (...args) {\r\n            return this.update(...args);\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n\r\n                const store = setupTransactionAndStore(db, table, key, resolve, reject);\r\n\r\n                store.delete(key); // May throw\r\n            });\r\n        };\r\n\r\n        this.del = this.delete = function (...args) {\r\n            return this.remove(...args);\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject);\r\n                store.clear();\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                closed = true;\r\n                delete dbCache[name][version];\r\n                db.close();\r\n                resolve();\r\n            });\r\n        };\r\n\r\n        this.get = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n\r\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject, true);\r\n\r\n                const req = store.get(key);\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            return new Promise((resolve, reject) => {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n\r\n                const store = setupTransactionAndStore(db, table, undefined, resolve, reject, true);\r\n\r\n                const req = key == null ? store.count() : store.count(key); // May throw\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.addEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            if (eventName === 'error') {\r\n                db.addEventListener(eventName, function (e) {\r\n                    e.preventDefault(); // Needed to prevent hard abort with ConstraintError\r\n                    handler(e);\r\n                });\r\n                return;\r\n            }\r\n            db.addEventListener(eventName, handler);\r\n        };\r\n\r\n        this.removeEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.removeEventListener(eventName, handler);\r\n        };\r\n\r\n        serverEvents.forEach(function (evName) {\r\n            this[evName] = function (handler) {\r\n                this.addEventListener(evName, handler);\r\n                return this;\r\n            };\r\n        }, this);\r\n\r\n        if (noServerMethods) {\r\n            return;\r\n        }\r\n\r\n        let err;\r\n        Array.from(db.objectStoreNames).some(storeName => {\r\n            if (this[storeName]) {\r\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\r\n                this.close();\r\n                return true;\r\n            }\r\n            this[storeName] = {};\r\n            const keys = Object.keys(this);\r\n            keys.filter(key => !(([...serverEvents, 'close', 'batch', 'addEventListener', 'removeEventListener']).includes(key)))\r\n                .map(key => {\r\n                    this[storeName][key] = (...args) => this[key](storeName, ...args);\r\n                });\r\n        });\r\n        return err;\r\n    };\r\n\r\n    const open = function (db, server, version, noServerMethods) {\r\n        dbCache[server][version] = db;\r\n\r\n        return new Server(db, server, version, noServerMethods);\r\n    };\r\n\r\n    const db = {\r\n        version: '0.15.0',\r\n        open (options) {\r\n            const server = options.server;\r\n            const noServerMethods = options.noServerMethods;\r\n            const clearUnusedStores = options.clearUnusedStores !== false;\r\n            const clearUnusedIndexes = options.clearUnusedIndexes !== false;\r\n            let version = options.version || 1;\r\n            const {schema} = options;\r\n            let {schemas} = options;\r\n            const schemaType = options.schemaType || (schema ? 'whole' : 'mixed');\r\n            if (!dbCache[server]) {\r\n                dbCache[server] = {};\r\n            }\r\n            const openDb = function (db) {\r\n                const s = open(db, server, version, noServerMethods);\r\n                if (s instanceof Error) {\r\n                    throw s;\r\n                }\r\n                return s;\r\n            };\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[server][version]) {\r\n                    const s = open(dbCache[server][version], server, version, noServerMethods);\r\n                    if (s instanceof Error) {\r\n                        reject(s);\r\n                        return;\r\n                    }\r\n                    resolve(s);\r\n                    return;\r\n                }\r\n                const idbimport = new IdbImport();\r\n                let p = Promise.resolve();\r\n                if (schema || schemas || options.schemaBuilder) {\r\n                    const _addCallback = idbimport.addCallback;\r\n                    idbimport.addCallback = function (cb) {\r\n                        function newCb (db) {\r\n                            const s = open(db, server, version, noServerMethods);\r\n                            if (s instanceof Error) {\r\n                                throw s;\r\n                            }\r\n                            return cb(db, s);\r\n                        }\r\n                        return _addCallback.call(idbimport, newCb);\r\n                    };\r\n\r\n                    p = p.then(() => {\r\n                        if (options.schemaBuilder) {\r\n                            return options.schemaBuilder(idbimport);\r\n                        }\r\n                    }).then(() => {\r\n                        if (schema) {\r\n                            switch (schemaType) {\r\n                            case 'mixed': case 'idb-schema': case 'merge': case 'whole': {\r\n                                schemas = {[version]: schema};\r\n                                break;\r\n                            }\r\n                            }\r\n                        }\r\n                        if (schemas) {\r\n                            idbimport.createVersionedSchema(schemas, schemaType, clearUnusedStores, clearUnusedIndexes);\r\n                        }\r\n                        const idbschemaVersion = idbimport.version();\r\n                        if (options.version && idbschemaVersion < version) {\r\n                            throw new Error(\r\n                                'Your highest schema building (IDBSchema) version (' + idbschemaVersion + ') ' +\r\n                                'must not be less than your designated version (' + version + ').'\r\n                            );\r\n                        }\r\n                        if (!options.version && idbschemaVersion > version) {\r\n                            version = idbschemaVersion;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                p.then(() => {\r\n                    return idbimport.open(server, version);\r\n                }).catch((err) => {\r\n                    if (err.resume) {\r\n                        err.resume = err.resume.then(openDb);\r\n                    }\r\n                    if (err.retry) {\r\n                        const _retry = err.retry;\r\n                        err.retry = function () {\r\n                            _retry.call(err).then(openDb);\r\n                        };\r\n                    }\r\n                    throw err;\r\n                }).then(openDb).then(resolve).catch((e) => {\r\n                    reject(e);\r\n                });\r\n            });\r\n        },\r\n\r\n        del (dbName) {\r\n            return this.delete(dbName);\r\n        },\r\n        delete (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                const request = indexedDB.deleteDatabase(dbName); // Does not throw\r\n\r\n                request.onsuccess = e => {\r\n                    // The following is needed currently by PhantomJS (though we cannot polyfill `oldVersion`): https://github.com/ariya/phantomjs/issues/14141\r\n                    if (!('newVersion' in e)) {\r\n                        e.newVersion = null;\r\n                    }\r\n                    resolve(e);\r\n                };\r\n                request.onerror = e => { // No errors currently\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                request.onblocked = e => {\r\n                    // The following addresses part of https://bugzilla.mozilla.org/show_bug.cgi?id=1220279\r\n                    e = e.newVersion === null || typeof Proxy === 'undefined' ? e : new Proxy(e, {\r\n                        get (target, name) {\r\n                            return name === 'newVersion' ? null : target[name];\r\n                        }\r\n                    });\r\n                    const resume = new Promise(function (res, rej) {\r\n                        // We overwrite handlers rather than make a new\r\n                        //   delete() since the original request is still\r\n                        //   open and its onsuccess will still fire if\r\n                        //   the user unblocks by closing the blocking\r\n                        //   connection\r\n                        request.onsuccess = ev => {\r\n                            // The following are needed currently by PhantomJS: https://github.com/ariya/phantomjs/issues/14141\r\n                            if (!('newVersion' in ev)) {\r\n                                ev.newVersion = e.newVersion;\r\n                            }\r\n\r\n                            if (!('oldVersion' in ev)) {\r\n                                ev.oldVersion = e.oldVersion;\r\n                            }\r\n\r\n                            res(ev);\r\n                        };\r\n                        request.onerror = e => {\r\n                            e.preventDefault();\r\n                            rej(e);\r\n                        };\r\n                    });\r\n                    e.resume = resume;\r\n                    reject(e);\r\n                };\r\n            });\r\n        },\r\n\r\n        cmp (param1, param2) {\r\n            return new Promise(function (resolve, reject) {\r\n                resolve(indexedDB.cmp(param1, param2)); // May throw\r\n            });\r\n        },\r\n\r\n        rangeIncludes (range, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                range = mongoifyKey(range); // May throw\r\n                if (!range || typeof range !== 'object') {\r\n                    reject(new TypeError('Bad range supplied'));\r\n                    return;\r\n                }\r\n                key = mongoifyKey(key); // May throw\r\n                resolve(range.includes(key));\r\n            });\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        local.db = db;\r\n    }\r\n}(self));\r\n"],"file":"db.js"}